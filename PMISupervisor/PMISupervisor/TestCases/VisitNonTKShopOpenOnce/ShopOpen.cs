///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PMISupervisor.TestCases.VisitNonTKShopOpenOnce
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ShopOpen recording.
    /// </summary>
    [TestModule("5789b6ea-8f64-4b02-9cfa-54bbcee3b1ef", ModuleType.Recording, 1)]
    public partial class ShopOpen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the PMISupervisor.PMISupervisorRepository repository.
        /// </summary>
        public static PMISupervisor.PMISupervisorRepository repo = PMISupervisor.PMISupervisorRepository.Instance;

        static ShopOpen instance = new ShopOpen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ShopOpen()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ShopOpen Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'PMI_Supervisor.Validate_ShopDetailsForm'.", repo.PMI_Supervisor.Validate_ShopDetailsFormInfo, new RecordItemIndex(0));
            Validate.Exists(repo.PMI_Supervisor.Validate_ShopDetailsFormInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PMI_Supervisor.ShopDetails' at Center", repo.PMI_Supervisor.ShopDetailsInfo, new RecordItemIndex(1));
            repo.PMI_Supervisor.ShopDetails.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'PMI_Supervisor.Validate_ProceedShopForm'.", repo.PMI_Supervisor.Validate_ProceedShopFormInfo, new RecordItemIndex(2));
            Validate.Exists(repo.PMI_Supervisor.Validate_ProceedShopFormInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PMI_Supervisor.ProceedButton' at Center", repo.PMI_Supervisor.ProceedButtonInfo, new RecordItemIndex(3));
            repo.PMI_Supervisor.ProceedButton.Touch();
            Delay.Milliseconds(500);
            
            UserCode.UserCode.validateTradeTracker();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'PMI_Supervisor.CheckInButton'.", repo.PMI_Supervisor.CheckInButtonInfo, new RecordItemIndex(5));
            Validate.Exists(repo.PMI_Supervisor.CheckInButtonInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PMI_Supervisor.CheckInButton' at Center", repo.PMI_Supervisor.CheckInButtonInfo, new RecordItemIndex(6));
            repo.PMI_Supervisor.CheckInButton.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'PMI_Supervisor.ShopRemarks_List'.", repo.PMI_Supervisor.ShopRemarks_ListInfo, new RecordItemIndex(7));
            Validate.Exists(repo.PMI_Supervisor.ShopRemarks_ListInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PMI_Supervisor.UserLocationIsIncorrect' at Center", repo.PMI_Supervisor.UserLocationIsIncorrectInfo, new RecordItemIndex(8));
            repo.PMI_Supervisor.UserLocationIsIncorrect.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'PMI_Supervisor.ShopRemarks_List'.", repo.PMI_Supervisor.ShopRemarks_ListInfo, new RecordItemIndex(9));
            Validate.Exists(repo.PMI_Supervisor.ShopRemarks_ListInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PMI_Supervisor.ShopOpen' at Center", repo.PMI_Supervisor.ShopOpenInfo, new RecordItemIndex(10));
            repo.PMI_Supervisor.ShopOpen.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'PMI_Supervisor.Validate_CameraScreen'.", repo.PMI_Supervisor.Validate_CameraScreenInfo, new RecordItemIndex(11));
            Validate.Exists(repo.PMI_Supervisor.Validate_CameraScreenInfo);
            Delay.Milliseconds(0);
            
            UserCode.UserCode.takePhoto();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PMI_Supervisor.ButtonDone' at Center", repo.PMI_Supervisor.ButtonDoneInfo, new RecordItemIndex(13));
            repo.PMI_Supervisor.ButtonDone.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'PMI_Supervisor.Validate_InfoPopUp'.", repo.PMI_Supervisor.Validate_InfoPopUpInfo, new RecordItemIndex(14));
            Validate.Exists(repo.PMI_Supervisor.Validate_InfoPopUpInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PMI_Supervisor.YesButton' at Center", repo.PMI_Supervisor.YesButtonInfo, new RecordItemIndex(15));
            repo.PMI_Supervisor.YesButton.Touch();
            Delay.Milliseconds(500);
            
            UserCode.UserCode.loadNonTKTPOSM();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
